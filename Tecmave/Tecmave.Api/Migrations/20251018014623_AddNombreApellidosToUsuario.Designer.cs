// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tecmave.Api.Data;

#nullable disable

namespace Tecmave.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251018014623_AddNombreApellidosToUsuario")]
    partial class AddNombreApellidosToUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("aspnetroleclaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("aspnetuserclaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("aspnetuserlogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("aspnetuserroles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("aspnetusertokens", (string)null);
                });

            modelBuilder.Entity("Tecmave.Api.Models.AgendamientoModel", b =>
                {
                    b.Property<int>("id_agendamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_agendamiento"));

                    b.Property<int>("cliente_id")
                        .HasColumnType("int");

                    b.Property<string>("fecha_agregada")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("id_estado")
                        .HasColumnType("int");

                    b.Property<int>("vehiculo_id")
                        .HasColumnType("int");

                    b.HasKey("id_agendamiento");

                    b.ToTable("agendamiento", (string)null);
                });

            modelBuilder.Entity("Tecmave.Api.Models.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("aspnetroles", (string)null);
                });

            modelBuilder.Entity("Tecmave.Api.Models.ColaboradoresModel", b =>
                {
                    b.Property<int>("id_colaborador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_colaborador"));

                    b.Property<DateOnly>("fecha_contratacion")
                        .HasColumnType("date");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<string>("puesto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("salario")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("id_colaborador");

                    b.ToTable("colaboradores", (string)null);
                });

            modelBuilder.Entity("Tecmave.Api.Models.DetalleFacturaModel", b =>
                {
                    b.Property<int>("id_detalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_detalle"));

                    b.Property<decimal>("costo")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("factura_id")
                        .HasColumnType("int");

                    b.Property<int>("servicio_id")
                        .HasColumnType("int");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("id_detalle");

                    b.ToTable("detalle_factura", (string)null);
                });

            modelBuilder.Entity("Tecmave.Api.Models.EstadosModel", b =>
                {
                    b.Property<int>("id_estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_estado"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_estado");

                    b.ToTable("estados", (string)null);
                });

            modelBuilder.Entity("Tecmave.Api.Models.FacturasModel", b =>
                {
                    b.Property<int>("id_factura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_factura"));

                    b.Property<int>("cliente_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_emision")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("metodo_pago")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("id_factura");

                    b.ToTable("factura", (string)null);
                });

            modelBuilder.Entity("Tecmave.Api.Models.MarcasModel", b =>
                {
                    b.Property<int>("id_marca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_marca"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_marca");

                    b.ToTable("marca", (string)null);
                });

            modelBuilder.Entity("Tecmave.Api.Models.NotificacionesModel", b =>
                {
                    b.Property<int>("id_notificaciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_notificaciones"));

                    b.Property<DateOnly>("fecha_envio")
                        .HasColumnType("date");

                    b.Property<int>("id_estado")
                        .HasColumnType("int");

                    b.Property<string>("mensaje")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("usuario_id")
                        .HasColumnType("int");

                    b.HasKey("id_notificaciones");

                    b.ToTable("notificaciones", (string)null);
                });

            modelBuilder.Entity("Tecmave.Api.Models.PromocionesModel", b =>
                {
                    b.Property<int>("id_promocion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_promocion"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("fecha_fin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("fecha_inicio")
                        .HasColumnType("date");

                    b.Property<int>("id_estado")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_promocion");

                    b.ToTable("promociones", (string)null);
                });

            modelBuilder.Entity("Tecmave.Api.Models.ResenasModel", b =>
                {
                    b.Property<int>("id_resena")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_resena"));

                    b.Property<float>("calificacion")
                        .HasColumnType("float");

                    b.Property<int>("cliente_id")
                        .HasColumnType("int");

                    b.Property<string>("comentario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("servicio_id")
                        .HasColumnType("int");

                    b.HasKey("id_resena");

                    b.ToTable("resenas", (string)null);
                });

            modelBuilder.Entity("Tecmave.Api.Models.RevisionModel", b =>
                {
                    b.Property<int>("id_revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_revision"));

                    b.Property<DateTime>("fecha_entrega_final")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("fecha_estimada_entrega")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("fecha_ingreso")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("id_estado")
                        .HasColumnType("int");

                    b.Property<int>("id_servicio")
                        .HasColumnType("int");

                    b.Property<string>("vehiculo_id")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_revision");

                    b.ToTable("revision", (string)null);
                });

            modelBuilder.Entity("Tecmave.Api.Models.RoleChangeAudit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("ChangedAtUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ChangedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("ChangedByUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Detail")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("NewRole")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PreviousRole")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("SourceIp")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("TargetUserId")
                        .HasColumnType("int");

                    b.Property<string>("TargetUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Action");

                    b.HasIndex("ChangedAtUtc");

                    b.HasIndex("TargetUserId");

                    b.ToTable("role_change_audit", (string)null);
                });

            modelBuilder.Entity("Tecmave.Api.Models.ServiciosModel", b =>
                {
                    b.Property<int>("id_servicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_servicio"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("tipo_servicio_id")
                        .HasColumnType("int");

                    b.HasKey("id_servicio");

                    b.ToTable("servicios", (string)null);
                });

            modelBuilder.Entity("Tecmave.Api.Models.ServiciosRevisionModel", b =>
                {
                    b.Property<int>("id_servicio_revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_servicio_revision"));

                    b.Property<decimal>("costo_final")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("revision_id")
                        .HasColumnType("int");

                    b.Property<int>("servicio_id")
                        .HasColumnType("int");

                    b.HasKey("id_servicio_revision");

                    b.ToTable("servicios_revision", (string)null);
                });

            modelBuilder.Entity("Tecmave.Api.Models.TipoServiciosModel", b =>
                {
                    b.Property<int>("id_tipo_servicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_tipo_servicio"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_tipo_servicio");

                    b.ToTable("tipo_servicios", (string)null);
                });

            modelBuilder.Entity("Tecmave.Api.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("aspnetusers", (string)null);
                });

            modelBuilder.Entity("Tecmave.Api.Models.VehiculosModel", b =>
                {
                    b.Property<int>("id_vehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_vehiculo"));

                    b.Property<int>("anno")
                        .HasColumnType("int");

                    b.Property<int>("cliente_id")
                        .HasColumnType("int");

                    b.Property<int>("id_marca")
                        .HasColumnType("int");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_vehiculo");

                    b.ToTable("vehiculos", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Tecmave.Api.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Tecmave.Api.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Tecmave.Api.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Tecmave.Api.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tecmave.Api.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Tecmave.Api.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
