@page
@model Front.Pages.Agendamiento.IndexModel
@{
}


<section class="section">
    <div class="container grid cols-2">
        <!-- Formulario de nueva cita -->
        <div class="card">
            <h3>Nueva cita</h3>
            <div class="form-row">
                <div>
                    <label>Tus vehículos</label>
                    <select class="input" id="vehiculos">
                        <option value="">Selecciona</option>
                    </select>
                </div>
            </div>
            <div class="form-row">
                <div>
                    <label>Fecha</label>
                    <input class="input" id="fecha" type="date" min="" />
                </div>
                <div>
                    <label>Hora</label>
                    <select class="input" id="hora">
                        <option value="">Selecciona</option>
                    </select>
                </div>
            </div>
            <button id="btnAgendar">Agendar</button>
        </div>

        <!-- Tabla de estado del servicio -->
        <div class="card">
            <h3>Estado del servicio</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th>Placa</th>
                        <th>Ingreso</th>
                        <th>Entrega estimada</th>
                        <th>Estado</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Aquí se insertan los agendamientos -->
                </tbody>
            </table>
            <div class="banner" style="margin-top:1rem">
                <div><strong>Recordatorios:</strong> a 6 meses.</div>
                <button class="secondary" onclick="toast('Recordatorio cada 6 meses (simulación)')">Activar 6 meses</button>
            </div>
        </div>
    </div>
</section>



<script>
    const API_AGENDAMIENTO = "https://localhost:7096/Agendamiento";
    const API_VEHICULO = "https://localhost:7096/Vehiculos";
    const API_ESTADO = "https://localhost:7096/Estados";
    const userId = "@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value";

    const horasDisponibles = ["08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00"];



    function cargarVehiculosUsuario() {
        $.get(API_VEHICULO, function (vehiculos) {
            $("#vehiculos").empty().append('<option value="">Selecciona</option>');
            vehiculos.forEach(v => {
                if (v.ClienteId.toString() === userId) {
                    $("#vehiculos").append(`<option value="${v.IdVehiculo}">${v.Placa}</option>`);
                }
            });
        });
    }


    
    function cargarHoras() {
        $("#hora").empty().append('<option value="">Selecciona</option>');
        horasDisponibles.forEach(h => {
            $("#hora").append(`<option value="${h}">${h}</option>`);
        });
    }



    function guardarAgendamiento() {
        const vehiculoId = $("#vehiculos").val();
        const fecha = $("#fecha").val();
        const hora = $("#hora").val();

        if (!vehiculoId || !fecha || !hora) {
            alert("Completa todos los campos");
            return;
        }

        const hoy = new Date().toISOString().split('T')[0];
        if (fecha < hoy) {
            alert("No puedes seleccionar una fecha anterior a hoy.");
            return;
        }

        // Verificar si ya existe un agendamiento en esa fecha y hora
        $.get(API_AGENDAMIENTO, function (agendamientos) {
            const existe = agendamientos.some(a =>
                a.fecha_estimada === fecha &&
                new Date(`1970-01-01T${a.hora_llegada}`).toISOString().substring(11, 16) === hora
            );

            if (existe) {
                alert("Ya existe una cita en esa fecha y hora. Por favor selecciona otra.");
                return;
            }

            // Si no existe, guardar
            const nuevoAgendamiento = {
                cliente_id: userId,
                vehiculo_id: parseInt(vehiculoId),
                fecha_agregada: hoy,
                fecha_estimada: fecha,
                hora_llegada: hora,
                id_estado: 2 // Pendiente
            };

            $.ajax({
                url: API_AGENDAMIENTO,
                method: "POST",
                contentType: "application/json",
                data: JSON.stringify(nuevoAgendamiento),
                success: function () {
                    alert("Cita agendada correctamente");
                    cargarAgendamientosUsuario();
                },
                error: function (xhr, status, error) {
                    console.error("Error al agendar:", error);
                }
            });
        });
    }




    function cargarAgendamientosUsuario() {
        $.get(API_AGENDAMIENTO, function (agendamientos) {
            $("table tbody").empty();

            const agendamientosUsuario = agendamientos.filter(a => a.cliente_id.toString() === userId);

            agendamientosUsuario.forEach(a => {
                $.get(`${API_VEHICULO}/${a.vehiculoId}`, function (vehiculo) {
                    $.get(`${API_ESTADO}/${a.id_estado}`, function (estado) {
                        $("table tbody").append(`
                            <tr>
                                <td>${vehiculo.Placa}</td>
                                <td>${a.fecha_agregada}</td>
                                <td>${a.fecha_estimada}</td>
                                <td>${estado.nombre}</td>
                            </tr>
                        `);
                    });
                });
            });
        });
    }


    
    $(document).ready(function () {

    const hoy = new Date().toISOString().split('T')[0];
        $("#fecha").attr("min", hoy);

        cargarVehiculosUsuario();
        cargarHoras();
        cargarAgendamientosUsuario();

        $("#btnAgendar").on("click", function () {
            guardarAgendamiento();
        });
    });
</script>


